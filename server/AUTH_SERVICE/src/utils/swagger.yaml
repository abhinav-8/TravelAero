openapi: 3.0.0
info:
  title: AUTH SERVICE
  version: 1.0.0
  description: Documentation for Auth Service APIs
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  name: AUTH SERVICE
  description: API endpoints for User Authentication and Authorization
paths:
  /authservice/api/v1/signup:
    post:
      summary: Create a new user
      tags: [AUTH SERVICE]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found

  /authservice/api/v1/users/{id}:
    delete:
      summary: Delete a user
      tags: [AUTH SERVICE]
      parameters:
        - in: path
          name: id
          description: ID of the user to delete
          schema:
            type: string
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found

    get:
      summary: Get details of a particular user
      tags: [AUTH SERVICE]
      parameters:
        - in: path
          name: id
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found

  /authservice/api/v1/login:
    post:
      summary: Login
      tags: [AUTH SERVICE]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found

  /authservice/api/v1/isAuthenticated:
    get:
      summary: Check if a user is authenticated or not
      tags: [AUTH SERVICE]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found

  /authservice/api/v1/isAdmin:
    get:
      summary: Check if a user is admin or not
      tags: [AUTH SERVICE]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Request successful
        400:
          description: Bad Request (might be missing mandatory fields)
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        501:
          description: Not Implemented
        201:
          description: Successfully created
        404:
          description: Not Found
